[{"path":"https://coreclinicalsciences.github.io/TransportHealth/articles/assumptions.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Assumptions of transportability and generalizability analysis","text":"Like causal inference methods, validity transportability generalizability analysis methods depends number identifiability assumptions. vignette briefly go . details general causal inference assumptions can found “” book causal inference (Hernán Robins 2024), specific transportability generalizability analysis can found (Ling et al. 2023) (Degtiar Rose 2023).","code":""},{"path":[]},{"path":"https://coreclinicalsciences.github.io/TransportHealth/articles/assumptions.html","id":"notation","dir":"Articles","previous_headings":"Assumptions","what":"Notation","title":"Assumptions of transportability and generalizability analysis","text":"Let \\(Y\\) outcome interest \\(\\) (binary, 0-1) treatment. Let \\(S\\) indicator participation source dataset, \\(S = 1\\) observations source dataset \\(S = 0\\) target dataset. Let \\(Y^\\) counterfactual outcome subject receives treatment \\(= \\). Using source dataset let us estimate \\[\\mathrm{E}[Y^1 - Y^0 \\,|\\,S = 1].\\] transportability analysis, wish estimate \\[\\mathrm{E}[Y^1 - Y^0 \\,|\\,S = 0],\\] generalizability analysis, wish estimate \\[\\mathrm{E}[Y^1 - Y^0].\\] Additionally, let \\(\\mathbf{L}\\) denote covariates control confounding source dataset, let \\(\\mathbf{E}\\) denote effect modifiers may differ distribution source target datasets.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/articles/assumptions.html","id":"stable-unit-treatment-value-assumption-sutva","dir":"Articles","previous_headings":"Assumptions","what":"Stable unit treatment value assumption (SUTVA)","title":"Assumptions of transportability and generalizability analysis","text":"stable unit treatment value assumption (SUTVA) says \\[Y = AY^1 + (1-)Y^0.\\] concretely, assumption contains two components: interference: treatment one subject affect counterfactual outcomes another subject hidden versions treatment: treatment affects counterfactual outcome one way Importantly, assumed hold source dataset target dataset.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/articles/assumptions.html","id":"conditional-exchangeability","dir":"Articles","previous_headings":"Assumptions","what":"Conditional exchangeability","title":"Assumptions of transportability and generalizability analysis","text":"conditional exchangeability assumption respect treatment assignment says within source population, counterfactual outcomes independent treatment assignment conditional covariates controlled confounding. mathematical notation, \\[Y^0, Y^1 \\perp \\,|\\,\\mathbf{L}, S = 1.\\] concretely, assumption says covariates aside ones included \\(\\mathbf{L}\\) cause confounding treatment outcome. words, \\(\\mathbf{L}\\) includes confounding variables source dataset. conditional exchangeability assumption respect study participation says counterfactual outcomes independent study participation conditional effect modifiers. mathematical notation, \\[Y^0, Y^1 \\perp S \\,|\\,\\mathbf{E}.\\] concretely, assumptions says effect modifiers whose distribution may differ source target populations included exhaustively \\(\\mathbf{E}\\).","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/articles/assumptions.html","id":"positivity","dir":"Articles","previous_headings":"Assumptions","what":"Positivity","title":"Assumptions of transportability and generalizability analysis","text":"Positivity treatment assignment assumes \\(0 < P(= 1 \\,|\\,\\mathbf{L} = \\mathbf{l}) < 1\\) values \\(\\mathbf{l}\\) support \\(\\mathbf{L}\\). means possible levels \\(\\mathbf{L}\\), subjects may assigned treatment group control group: locked either group. Similarly, positivity study participation assumes \\(0 < P(S = 1 \\,|\\,\\mathbf{E} = \\mathbf{e}) < 1\\) values \\(\\mathbf{e}\\) support \\(\\mathbf{E}\\), means possible values \\(\\mathbf{E}\\), subjects can possible, certainly, source dataset.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/articles/assumptions.html","id":"verifying-assumptions","dir":"Articles","previous_headings":"","what":"Verifying assumptions","title":"Assumptions of transportability and generalizability analysis","text":"assumptions inherently untestable. However, transportability analysis methods ways assess whether assumptions likely hold. details available diagnostic tools presented vignettes specific method.","code":""},{"path":[]},{"path":"https://coreclinicalsciences.github.io/TransportHealth/articles/overview.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Overview of transportability and generalizability analyses and TransportHealth","text":"Transportability analysis general statistical approach used estimate causal effects treatment response target population using data original study consisted different narrower population. another words, transportability analysis encompasses transportability generalizability analyses, addressing different aspects applying study findings different broader populations, respectively. Marginal causal effects study target populations often differ due varying distributions effect modifiers two populations. treatment effect varies across different levels factors, heterogeneity causal effect treatment, factors referred effect modifiers. effect modifiers also influence selection trial participants target population, treatment effect estimated trial becomes biased estimate causal effect entire target population. Thus, causal effects treatment estimated study population may accurately represent target population. Marginal causal effects study target populations often equal due different distributions effect modifiers two populations. causal effects treatment estimated based sample study population biased estimates causal effects target population. Effect modification must accounted obtain unbiased causal effect estimates target population using data study population.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/articles/overview.html","id":"rationale-for-transportability-analyses","dir":"Articles","previous_headings":"Introduction","what":"Rationale for Transportability Analyses","title":"Overview of transportability and generalizability analyses and TransportHealth","text":"Undoubtedly, conducting study directly target population provide convincing accurate answer estimating causal effects treatment. data collected actual population interest inherently account relevant characteristics effect modifiers unique population. However, approach often feasible. example, RCTs predominantly conducted high-income countries low- middle-income countries (LMICs) -represented, especially novel pharmacological agents. External validity RCT results high-income countries LMICs may limited. Quantifying external validity transportability analysis can important avenue mitigate data limitations. several possible applications transportability analysis. include limited : Transporting findings randomized clinical trial (RCT) external population trial conducted Transporting findings real-world data (RWD) study external population Generalizing findings RCT (subset sample) broader population included trial","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/articles/overview.html","id":"different-analytical-approaches-for-transportability-analyses","dir":"Articles","previous_headings":"Introduction","what":"Different Analytical Approaches for Transportability Analyses","title":"Overview of transportability and generalizability analyses and TransportHealth","text":"five possible scenarios can defined type data availability data privacy constraints: Data availability: individual participants-level data (IPD) versus aggregate (summary-level) data Data pooling original target IPDs: Permitted versus prohibited Different data availability privacy scenarios","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/articles/overview.html","id":"analytical-scope-of-our-package","dir":"Articles","previous_headings":"Introduction","what":"Analytical Scope of Our Package","title":"Overview of transportability and generalizability analyses and TransportHealth","text":"designed R package handle five data scenarios. Scenario #1 mergeable IPDs original study target sample available, can use inverse odds participation weights (IOPW) transportability research questions, inverse probability participation weighting (IPPW) generalizability research questions. Scenario #2 IPDs original study target sample merged, can use G computation. Scenario #3 IPD original study, can use `Target Aggregate Data Adjustment` (TADA) method. Scenarios #4 #5 aggregate data original study available, can use `Interpolated G-computation`.","code":""},{"path":[]},{"path":"https://coreclinicalsciences.github.io/TransportHealth/articles/transportGC.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"G-computation-based transportability analysis","text":"vignette, demonstrate use TransportHealth g-computation-based transportability analysis instances individual participant-level data (IPD) available original study target sample, mergable.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/articles/transportGC.html","id":"brief-introduction-to-g-computation","dir":"Articles","previous_headings":"Introduction","what":"Brief introduction to g-computation","title":"G-computation-based transportability analysis","text":"transportability generalizability analysis, g-computation proceeds largely confounding adjustment. Firstly, model outcome terms treatment, covariates effect modifiers fitted using source data. , model used calculate fitted values outcome treatment set control treatment observations target data; particular, observed covariate effect modifier values target data used calculate fitted values. Finally, treatment effects calculated using fitted values obtain unbiased estimate treatment effect target population.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/articles/transportGC.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"G-computation-based transportability analysis","text":"Suppose interested estimating causal effect medication systolic blood pressure target population, able conduct observational study using samples study population. obtain unbiased causal effect estimates using study sample, account following covariates: sex, body fat percentage, stress level. know effectiveness medication depends two effect modifiers: 1) stress level, 2) whether patients taking another medication. Note covariates adjusted study data can also effect modifiers.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/articles/transportGC.html","id":"coded-variables","dir":"Articles","previous_headings":"Example","what":"Coded variables","title":"G-computation-based transportability analysis","text":"Medication - med1 1 treated 0 untreated Systolic blood pressure (SBP) - sysBloodPressure (continuous) Sex - sex 1 male 0 female Body fat percentage - percentBodyFat (continuous) Stress level - stress 1 stressed 0 normal Medication 2 - med2 1 treated 0 untreated","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/articles/transportGC.html","id":"analyses","dir":"Articles","previous_headings":"Example","what":"Analyses","title":"G-computation-based transportability analysis","text":"First, implementation g-computation TransportHealthR specifically, data study target population separate data frames R environment. study data contain response, treatment, covariate effect modifier information, target data contain covariate effect modifier information. Suppose study target data separately follows. can now perform transportability analysis using g-computation transportGCPreparedModel transportGC functions.","code":"names(testData) #> [1] \"studyData\"  \"targetData\" print(\"Study data:\") #> [1] \"Study data:\" head(testData$studyData) #>   sysBloodPressure med1 sex stress med2 percentBodyFat #> 1         109.4347    1   1      0    0       16.84868 #> 2         115.9803    0   1      1    0       14.48698 #> 3         112.7886    0   1      0    0       15.53636 #> 4         107.6026    1   1      0    0       13.76442 #> 5         120.6845    0   0      1    0       30.08657 #> 6         113.4424    0   1      0    0       16.23256 print(\"Target data:\") #> [1] \"Target data:\" head(testData$targetData) #>   sex stress med2 percentBodyFat #> 1   0      1    0       26.12896 #> 2   1      1    0       12.04972 #> 3   1      1    0       12.55972 #> 4   0      0    1       27.07130 #> 5   1      1    0       11.85846 #> 6   0      1    0       27.64520 transportGCPreparedModel(outcomeModel,                          treatment,                          family,                          studyData,                          wipe)  transportGC(effectType,             preparedModel,             targetData)"},{"path":"https://coreclinicalsciences.github.io/TransportHealth/articles/transportGC.html","id":"arguments-for-the-transportgcpreparedmodel-and-transportgc-functions","dir":"Articles","previous_headings":"Example > Analyses","what":"Arguments for the transportGCPreparedModel and transportGC functions","title":"G-computation-based transportability analysis","text":"transportGCPreparedModel function requires following arguments: outcomeModel: formula expressing outcome model fit treatment: name variable indicating treatment family: type outcome model fit. can families used glm, one \"coxph\",\"survreg\" \"polr\". \"coxph\" \"survreg\" options survival analysis use default options methods survival package. \"polr\" option ordinal outcomes, link function can specified method argument, uses logistic link default. studyData: source data wipe: boolean indicating whether erase source data resulting transportGCPreparedModel object transportGC function requires following arguments: effectType: string indicating type effect calculate, \"meanDiff\" mean difference, `“rr”`` relative risk, . preparedModel: transportGCPreparedModel object returned transportGCPreparedModel function targetData: target data","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/articles/transportGC.html","id":"specification-of-transportability-analysis","dir":"Articles","previous_headings":"Example > Analyses","what":"Specification of transportability analysis","title":"G-computation-based transportability analysis","text":"Recall : - sysBloodPressure response med1 treatment sex, percentBodyFat, stress covariates controlled original study med2 (medication) stress effect modifiers interest. First, fit regression model outcome terms covariates effect modifiers, making sure include interaction terms effect modifiers. need wrap results using transportGCPreparedModel function able use transportGC function, follows. Note provide study data function. estimate average treatment effect using medication systolic blood pressure target population, can use transportGC function follows. Note provide target data function.","code":"preparedModel <- TransportHealth::transportGCPreparedModel(sysBloodPressure ~ med1 + sex + stress + percentBodyFat + med1:stress + med1:med2, # Formula for outcome model                                           treatment = \"med1\", # Name of treatment variable                                           family = gaussian, # Type of model                                           studyData = testData$studyData, # Study data                                           wipe = F # Wipe study data from model?                                           ) result <- TransportHealth::transportGC(\"meanDiff\", # Type of effect estimate (mean difference, relative risk, etc)                       preparedModel, # transportGCPreparedModel object                       testData$targetData # Target data                       )"},{"path":"https://coreclinicalsciences.github.io/TransportHealth/articles/transportGC.html","id":"producing-statistical-results","dir":"Articles","previous_headings":"Example > Analyses","what":"Producing statistical results","title":"G-computation-based transportability analysis","text":"show results analysis, use summary like lm fitting linear model. Using summary print names treatment response variables, transported treatment effect, estimated standard error, summary fitted outcome model. Note scientific conclusions drawn transported effect estimate. workflow constructed way accommodate situations source data target data merged due privacy concerns. Owners source data can apply transportGCPreparedModel function source data wipe = T erase source data transportGCPreparedModel object send object owners target data .rds file. owners target data can extract object conduct g-computation using transportGC. See comparison transportGCPreparedModel objects wipe = T wipe = F. Note workflow enable calculation correct variance estimators using bootstrap (approach transportGC uses) wipe = T support privacy needs. One work around owners source data can resample source data provide transportGCPreparedModel objects resample source data, owners target data can independently resample target data apply transportGC using transportGCPreparedModel object resampled target dataset obtain bootstrap samples MSM coefficient estimates. obtain coefficient plot estimates, use plot function.  One can assess appropriateness outcome model performing usual diagnostic techniques outcome model. example, can look residual plot outcome model.  example, residual plot outcome model patternless, indicating appropriate. Note step done owners study data study target data merged, residuals also erased transportGCPreparedModel object wipe = T. Like inverse odds participation weighting (IOPW), validity g-computation depends untestable causal inference assumptions, including stable unit treatment value (SUTVA), conditional exchangeability, positivity consistency (Ling et al. 2023; Degtiar Rose 2023). Unlike IOPW, g-computation readily available diagnostics evaluate assumptions likely hold . conditional exchangeability, suggest conducting sensitivity analyses respect unmeasured confounding, beyond scope package. positivity, simple method examine marginal distributions covariates effect modifiers study target data compare : distributions overlap study target data, need identical.","code":"summary(result) #> Response: sysBloodPressure #> Treatment: med1 #> Effect type: meanDiff #> ATE estimate: -1.4575638820277 #> Standard error: 0.125829267599943 #> Fitted outcome model: #>  #> Call: #> stats::glm(formula = outcomeModel, family = family, data = studyData,  #>     model = !wipe) #>  #> Coefficients: #>                Estimate Std. Error t value Pr(>|t|)     #> (Intercept)     99.9742     0.4449  224.70   <2e-16 *** #> med11           -4.9526     0.0844  -58.66   <2e-16 *** #> sex1             5.0582     0.2136   23.68   <2e-16 *** #> stress1          4.9920     0.0838   59.59   <2e-16 *** #> percentBodyFat   0.4996     0.0157   31.80   <2e-16 *** #> med11:stress1    6.9820     0.1299   53.74   <2e-16 *** #> med10:med21     -0.3776     0.1342   -2.81    0.005 **  #> med11:med21     -5.1624     0.1514  -34.09   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for gaussian family taken to be 0.9692829) #>  #>     Null deviance: 22462.80  on 999  degrees of freedom #> Residual deviance:   961.53  on 992  degrees of freedom #> AIC: 2817 #>  #> Number of Fisher Scoring iterations: 2 preparedModelNoWipe <- TransportHealth::transportGCPreparedModel(sysBloodPressure ~ med1 + sex + stress + percentBodyFat + med1:stress + med1:med2,                                           treatment = \"med1\",                                           family = gaussian,                                           studyData = testData$studyData,                                           wipe = F) write(\"Components of outcomeModel with wipe = F:\", stdout()) #> Components of outcomeModel with wipe = F: str(preparedModelNoWipe$outcomeModel) #> List of 30 #>  $ coefficients     : Named num [1:8] 99.97 -4.95 5.06 4.99 0.5 ... #>   ..- attr(*, \"names\")= chr [1:8] \"(Intercept)\" \"med11\" \"sex1\" \"stress1\" ... #>  $ residuals        : Named num [1:1000] 0.93743 -1.28172 -0.00575 0.64614 0.68715 ... #>   ..- attr(*, \"names\")= chr [1:1000] \"1\" \"2\" \"3\" \"4\" ... #>  $ fitted.values    : Named num [1:1000] 108 117 113 107 120 ... #>   ..- attr(*, \"names\")= chr [1:1000] \"1\" \"2\" \"3\" \"4\" ... #>  $ effects          : Named num [1:1000] -3605.9 -41.9 12.6 120.7 -31.8 ... #>   ..- attr(*, \"names\")= chr [1:1000] \"(Intercept)\" \"med11\" \"sex1\" \"stress1\" ... #>  $ R                : num [1:8, 1:8] -31.6 0 0 0 0 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:8] \"(Intercept)\" \"med11\" \"sex1\" \"stress1\" ... #>   .. ..$ : chr [1:8] \"(Intercept)\" \"med11\" \"sex1\" \"stress1\" ... #>  $ rank             : int 8 #>  $ qr               :List of 5 #>   ..$ qr   : num [1:1000, 1:8] -31.6228 0.0316 0.0316 0.0316 0.0316 ... #>   .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. ..$ : chr [1:1000] \"1\" \"2\" \"3\" \"4\" ... #>   .. .. ..$ : chr [1:8] \"(Intercept)\" \"med11\" \"sex1\" \"stress1\" ... #>   ..$ rank : int 8 #>   ..$ qraux: num [1:8] 1.03 1.03 1.03 1.03 1.03 ... #>   ..$ pivot: int [1:8] 1 2 3 4 5 6 7 8 #>   ..$ tol  : num 1e-11 #>   ..- attr(*, \"class\")= chr \"qr\" #>  $ family           :List of 12 #>   ..$ family    : chr \"gaussian\" #>   ..$ link      : chr \"identity\" #>   ..$ linkfun   :function (mu)   #>   ..$ linkinv   :function (eta)   #>   ..$ variance  :function (mu)   #>   ..$ dev.resids:function (y, mu, wt)   #>   ..$ aic       :function (y, n, mu, wt, dev)   #>   ..$ mu.eta    :function (eta)   #>   ..$ initialize:  expression({  n <- rep.int(1, nobs)  if (is.null(etastart) && is.null(start) && is.null(mustart) && ((family$link| __truncated__ #>   ..$ validmu   :function (mu)   #>   ..$ valideta  :function (eta)   #>   ..$ dispersion: num NA #>   ..- attr(*, \"class\")= chr \"family\" #>  $ linear.predictors: Named num [1:1000] 108 117 113 107 120 ... #>   ..- attr(*, \"names\")= chr [1:1000] \"1\" \"2\" \"3\" \"4\" ... #>  $ deviance         : num 962 #>  $ aic              : num 2817 #>  $ null.deviance    : num 22463 #>  $ iter             : int 2 #>  $ weights          : Named num [1:1000] 1 1 1 1 1 1 1 1 1 1 ... #>   ..- attr(*, \"names\")= chr [1:1000] \"1\" \"2\" \"3\" \"4\" ... #>  $ prior.weights    : Named num [1:1000] 1 1 1 1 1 1 1 1 1 1 ... #>   ..- attr(*, \"names\")= chr [1:1000] \"1\" \"2\" \"3\" \"4\" ... #>  $ df.residual      : int 992 #>  $ df.null          : int 999 #>  $ y                : Named num [1:1000] 109 116 113 108 121 ... #>   ..- attr(*, \"names\")= chr [1:1000] \"1\" \"2\" \"3\" \"4\" ... #>  $ converged        : logi TRUE #>  $ boundary         : logi FALSE #>  $ model            :'data.frame':   1000 obs. of  6 variables: #>   ..$ sysBloodPressure: num [1:1000] 109 116 113 108 121 ... #>   ..$ med1            : Factor w/ 2 levels \"0\",\"1\": 2 1 1 2 1 1 1 2 1 2 ... #>   ..$ sex             : Factor w/ 2 levels \"0\",\"1\": 2 2 2 2 1 2 1 2 1 1 ... #>   ..$ stress          : Factor w/ 2 levels \"0\",\"1\": 1 2 1 1 2 1 2 2 1 2 ... #>   ..$ percentBodyFat  : num [1:1000] 16.8 14.5 15.5 13.8 30.1 ... #>   ..$ med2            : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 1 1 ... #>   ..- attr(*, \"terms\")=Classes 'terms', 'formula'  language sysBloodPressure ~ med1 + sex + stress + percentBodyFat + med1:stress +      med1:med2 #>   .. .. ..- attr(*, \"variables\")= language list(sysBloodPressure, med1, sex, stress, percentBodyFat, med2) #>   .. .. ..- attr(*, \"factors\")= int [1:6, 1:6] 0 1 0 0 0 0 0 0 1 0 ... #>   .. .. .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. .. .. ..$ : chr [1:6] \"sysBloodPressure\" \"med1\" \"sex\" \"stress\" ... #>   .. .. .. .. ..$ : chr [1:6] \"med1\" \"sex\" \"stress\" \"percentBodyFat\" ... #>   .. .. ..- attr(*, \"term.labels\")= chr [1:6] \"med1\" \"sex\" \"stress\" \"percentBodyFat\" ... #>   .. .. ..- attr(*, \"order\")= int [1:6] 1 1 1 1 2 2 #>   .. .. ..- attr(*, \"intercept\")= int 1 #>   .. .. ..- attr(*, \"response\")= int 1 #>   .. .. ..- attr(*, \".Environment\")=<environment: R_GlobalEnv>  #>   .. .. ..- attr(*, \"predvars\")= language list(sysBloodPressure, med1, sex, stress, percentBodyFat, med2) #>   .. .. ..- attr(*, \"dataClasses\")= Named chr [1:6] \"numeric\" \"factor\" \"factor\" \"factor\" ... #>   .. .. .. ..- attr(*, \"names\")= chr [1:6] \"sysBloodPressure\" \"med1\" \"sex\" \"stress\" ... #>  $ call             : language stats::glm(formula = outcomeModel, family = family, data = studyData, model = !wipe) #>  $ formula          :Class 'formula'  language sysBloodPressure ~ med1 + sex + stress + percentBodyFat + med1:stress +      med1:med2 #>   .. ..- attr(*, \".Environment\")=<environment: R_GlobalEnv>  #>  $ terms            :Classes 'terms', 'formula'  language sysBloodPressure ~ med1 + sex + stress + percentBodyFat + med1:stress +      med1:med2 #>   .. ..- attr(*, \"variables\")= language list(sysBloodPressure, med1, sex, stress, percentBodyFat, med2) #>   .. ..- attr(*, \"factors\")= int [1:6, 1:6] 0 1 0 0 0 0 0 0 1 0 ... #>   .. .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. .. ..$ : chr [1:6] \"sysBloodPressure\" \"med1\" \"sex\" \"stress\" ... #>   .. .. .. ..$ : chr [1:6] \"med1\" \"sex\" \"stress\" \"percentBodyFat\" ... #>   .. ..- attr(*, \"term.labels\")= chr [1:6] \"med1\" \"sex\" \"stress\" \"percentBodyFat\" ... #>   .. ..- attr(*, \"order\")= int [1:6] 1 1 1 1 2 2 #>   .. ..- attr(*, \"intercept\")= int 1 #>   .. ..- attr(*, \"response\")= int 1 #>   .. ..- attr(*, \".Environment\")=<environment: R_GlobalEnv>  #>   .. ..- attr(*, \"predvars\")= language list(sysBloodPressure, med1, sex, stress, percentBodyFat, med2) #>   .. ..- attr(*, \"dataClasses\")= Named chr [1:6] \"numeric\" \"factor\" \"factor\" \"factor\" ... #>   .. .. ..- attr(*, \"names\")= chr [1:6] \"sysBloodPressure\" \"med1\" \"sex\" \"stress\" ... #>  $ data             :'data.frame':   1000 obs. of  6 variables: #>   ..$ sysBloodPressure: num [1:1000] 109 116 113 108 121 ... #>   ..$ med1            : Factor w/ 2 levels \"0\",\"1\": 2 1 1 2 1 1 1 2 1 2 ... #>   ..$ sex             : Factor w/ 2 levels \"0\",\"1\": 2 2 2 2 1 2 1 2 1 1 ... #>   ..$ stress          : Factor w/ 2 levels \"0\",\"1\": 1 2 1 1 2 1 2 2 1 2 ... #>   ..$ med2            : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 1 1 ... #>   ..$ percentBodyFat  : num [1:1000] 16.8 14.5 15.5 13.8 30.1 ... #>  $ offset           : NULL #>  $ control          :List of 3 #>   ..$ epsilon: num 1e-08 #>   ..$ maxit  : num 25 #>   ..$ trace  : logi FALSE #>  $ method           : chr \"glm.fit\" #>  $ contrasts        :List of 4 #>   ..$ med1  : chr \"contr.treatment\" #>   ..$ sex   : chr \"contr.treatment\" #>   ..$ stress: chr \"contr.treatment\" #>   ..$ med2  : chr \"contr.treatment\" #>  $ xlevels          :List of 4 #>   ..$ med1  : chr [1:2] \"0\" \"1\" #>   ..$ sex   : chr [1:2] \"0\" \"1\" #>   ..$ stress: chr [1:2] \"0\" \"1\" #>   ..$ med2  : chr [1:2] \"0\" \"1\" #>  - attr(*, \"class\")= chr [1:2] \"glm\" \"lm\" preparedModelWipe <- TransportHealth::transportGCPreparedModel(sysBloodPressure ~ med1 + sex + stress + percentBodyFat + med1:stress + med1:med2,                                           treatment = \"med1\",                                           family = gaussian,                                           studyData = testData$studyData,                                           wipe = T) write(\"\\n\", stdout()) write(\"Components of outcomeModel with wipe = T:\", stdout()) #> Components of outcomeModel with wipe = T: str(preparedModelWipe$outcomeModel) #> List of 21 #>  $ coefficients : Named num [1:8] 99.97 -4.95 5.06 4.99 0.5 ... #>   ..- attr(*, \"names\")= chr [1:8] \"(Intercept)\" \"med11\" \"sex1\" \"stress1\" ... #>  $ effects      : Named num [1:1000] -3605.9 -41.9 12.6 120.7 -31.8 ... #>   ..- attr(*, \"names\")= chr [1:1000] \"(Intercept)\" \"med11\" \"sex1\" \"stress1\" ... #>  $ R            : num [1:8, 1:8] -31.6 0 0 0 0 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:8] \"(Intercept)\" \"med11\" \"sex1\" \"stress1\" ... #>   .. ..$ : chr [1:8] \"(Intercept)\" \"med11\" \"sex1\" \"stress1\" ... #>  $ rank         : int 8 #>  $ qr           :List of 5 #>   ..$ qr   : num [1:1000, 1:8] -31.6228 0.0316 0.0316 0.0316 0.0316 ... #>   .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. ..$ : chr [1:1000] \"1\" \"2\" \"3\" \"4\" ... #>   .. .. ..$ : chr [1:8] \"(Intercept)\" \"med11\" \"sex1\" \"stress1\" ... #>   ..$ rank : int 8 #>   ..$ qraux: num [1:8] 1.03 1.03 1.03 1.03 1.03 ... #>   ..$ pivot: int [1:8] 1 2 3 4 5 6 7 8 #>   ..$ tol  : num 1e-11 #>   ..- attr(*, \"class\")= chr \"qr\" #>  $ family       :List of 12 #>   ..$ family    : chr \"gaussian\" #>   ..$ link      : chr \"identity\" #>   ..$ linkfun   :function (mu)   #>   ..$ linkinv   :function (eta)   #>   ..$ variance  :function (mu)   #>   ..$ dev.resids:function (y, mu, wt)   #>   ..$ aic       :function (y, n, mu, wt, dev)   #>   ..$ mu.eta    :function (eta)   #>   ..$ initialize:  expression({  n <- rep.int(1, nobs)  if (is.null(etastart) && is.null(start) && is.null(mustart) && ((family$link| __truncated__ #>   ..$ validmu   :function (mu)   #>   ..$ valideta  :function (eta)   #>   ..$ dispersion: num NA #>   ..- attr(*, \"class\")= chr \"family\" #>  $ deviance     : num 962 #>  $ aic          : num 2817 #>  $ null.deviance: num 22463 #>  $ iter         : int 2 #>  $ prior.weights: Named num [1:1000] 1 1 1 1 1 1 1 1 1 1 ... #>   ..- attr(*, \"names\")= chr [1:1000] \"1\" \"2\" \"3\" \"4\" ... #>  $ df.residual  : int 992 #>  $ df.null      : int 999 #>  $ converged    : logi TRUE #>  $ boundary     : logi FALSE #>  $ call         : language stats::glm(formula = outcomeModel, family = family, data = studyData, model = !wipe) #>  $ formula      :Class 'formula'  language sysBloodPressure ~ med1 + sex + stress + percentBodyFat + med1:stress +      med1:med2 #>   .. ..- attr(*, \".Environment\")=<environment: R_GlobalEnv>  #>  $ terms        :Classes 'terms', 'formula'  language sysBloodPressure ~ med1 + sex + stress + percentBodyFat + med1:stress +      med1:med2 #>   .. ..- attr(*, \"variables\")= language list(sysBloodPressure, med1, sex, stress, percentBodyFat, med2) #>   .. ..- attr(*, \"factors\")= int [1:6, 1:6] 0 1 0 0 0 0 0 0 1 0 ... #>   .. .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. .. ..$ : chr [1:6] \"sysBloodPressure\" \"med1\" \"sex\" \"stress\" ... #>   .. .. .. ..$ : chr [1:6] \"med1\" \"sex\" \"stress\" \"percentBodyFat\" ... #>   .. ..- attr(*, \"term.labels\")= chr [1:6] \"med1\" \"sex\" \"stress\" \"percentBodyFat\" ... #>   .. ..- attr(*, \"order\")= int [1:6] 1 1 1 1 2 2 #>   .. ..- attr(*, \"intercept\")= int 1 #>   .. ..- attr(*, \"response\")= int 1 #>   .. ..- attr(*, \".Environment\")=<environment: R_GlobalEnv>  #>   .. ..- attr(*, \"predvars\")= language list(sysBloodPressure, med1, sex, stress, percentBodyFat, med2) #>   .. ..- attr(*, \"dataClasses\")= Named chr [1:6] \"numeric\" \"factor\" \"factor\" \"factor\" ... #>   .. .. ..- attr(*, \"names\")= chr [1:6] \"sysBloodPressure\" \"med1\" \"sex\" \"stress\" ... #>  $ control      :List of 3 #>   ..$ epsilon: num 1e-08 #>   ..$ maxit  : num 25 #>   ..$ trace  : logi FALSE #>  $ method       : chr \"glm.fit\" #>  $ contrasts    :List of 4 #>   ..$ med1  : chr \"contr.treatment\" #>   ..$ sex   : chr \"contr.treatment\" #>   ..$ stress: chr \"contr.treatment\" #>   ..$ med2  : chr \"contr.treatment\" #>  - attr(*, \"class\")= chr [1:2] \"glm\" \"lm\" plot(result) plot(preparedModel$outcomeModel, which = 1)"},{"path":[]},{"path":[]},{"path":"https://coreclinicalsciences.github.io/TransportHealth/articles/transportIP.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Inverse probability or odds weighting-based transportability analysis","text":"vignette, demonstrate use TransportHealth weighting-based transportability analysis instances mergeable individual participant-level data (IPD) available original study target sample.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/articles/transportIP.html","id":"brief-introduction-to-iopw-and-ippw","dir":"Articles","previous_headings":"Introduction","what":"Brief Introduction to IOPW and IPPW","title":"Inverse probability or odds weighting-based transportability analysis","text":"transportability scenarios, original study population separate population target population interest, can use inverse odds participation weighting (IOPW)approach. original study population subset target population interest, refer generalizability scenarios; , can use inverse probability participation weighting (IPPW) approach. IOPW IPPW approaches analogous propensity score weighting approach, inverse probability treatment weighting (IPTW), aims adjust confounding typically present non-randomized study. methods analogous sense can use model logistic regression estimate probability interest (.e, probability study participation propensity treated). transportability analysis framework, results original study weighted based inverse odds inverse probability (transportability generalizability, respectively) calculated based differing distributions effect modifiers original study target sample data. weights refer conditional probability participation target study.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/articles/transportIP.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Inverse probability or odds weighting-based transportability analysis","text":"Suppose interested estimating causal effect medication systolic blood pressure target population, able conduct observational study using samples study population. obtain unbiased causal effect estimates using study sample, account following covariates: sex, body fat percentage, stress level. know effectiveness medication depends two effect modifiers: 1) stress level, 2) whether patients taking another medication. Note covariates adjusted study data can also effect modifiers.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/articles/transportIP.html","id":"coded-variables","dir":"Articles","previous_headings":"Example","what":"Coded variables","title":"Inverse probability or odds weighting-based transportability analysis","text":"Medication - med1 1 treated 0 untreated Systolic blood pressure (SBP) - sysBloodPressure (continuous) Sex - sex 1 male 0 female Body fat percentage - percentBodyFat (continuous) Stress level - stress 1 stressed 0 normal Medication 2 - med2 1 treated 0 untreated","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/articles/transportIP.html","id":"analyses","dir":"Articles","previous_headings":"Example","what":"Analyses","title":"Inverse probability or odds weighting-based transportability analysis","text":"can perform analysis follows. First, data study target population may two separate data frames single merged data frame R environment. separate, put together list object; need name components, package identify study data dataset response treatment information. , make sure study data response treatment columns, target data (case 99% time). merged, make sure response treatment column values target data NA, ; binary variable indicating observations study data target data, participation coded 1 TRUE. Suppose study target data separately follows. merging data, can now perform transportability analysis based IOPW approach using transportIP function.","code":"names(testData) #> [1] \"studyData\"  \"targetData\" print(\"Study data:\") #> [1] \"Study data:\" head(testData$studyData) #>   sysBloodPressure med1 sex stress med2 percentBodyFat #> 1         109.4347    1   1      0    0       16.84868 #> 2         115.9803    0   1      1    0       14.48698 #> 3         112.7886    0   1      0    0       15.53636 #> 4         107.6026    1   1      0    0       13.76442 #> 5         120.6845    0   0      1    0       30.08657 #> 6         113.4424    0   1      0    0       16.23256 print(\"Target data:\") #> [1] \"Target data:\" head(testData$targetData) #>   sex stress med2 percentBodyFat #> 1   0      1    0       26.12896 #> 2   1      1    0       12.04972 #> 3   1      1    0       12.55972 #> 4   0      0    1       27.07130 #> 5   1      1    0       11.85846 #> 6   0      1    0       27.64520 transportIP(msmFormula,             propensityScoreModel,             participationModel,             propensityWeights,             participationWeights,             treatment,             participation,             response,             family,             method,             data,             transport,             bootstrapNum)"},{"path":"https://coreclinicalsciences.github.io/TransportHealth/articles/transportIP.html","id":"arguments-for-the-transportip-function","dir":"Articles","previous_headings":"Example > Analyses","what":"Arguments for the transportIP function","title":"Inverse probability or odds weighting-based transportability analysis","text":"function requires specification following arguments: msmFormula: formula expressing marginal structural model (MSM) fit. propensityScoreModel: formula glm object expressing propensity model, .e. model treatment assignment terms covariates. formula provided, logistic regression used default. Custom propensity weights weighting methods can also provided customPropensity argument instead; case, set propensityScoreModel NULL default overridden. participationModel: formula glm object expressing participation model, .e. model study participation terms effect modifiers. formula provided, logistic regression used default. Custom participation weights weighting methods can also provided customParticipation argument instead; case, set participationModel NULL default overridden. family: type MSM fit. can families used glm, one \"coxph\",\"survreg\" \"polr\". \"coxph\" \"survreg\" options survival analysis use default options methods survival package. \"polr\" option ordinal outcomes, link function can specified method argument, uses logistic link default. data: study target data, separate merged transport: argument can used specify whether transportability generalizability analysis performed. default (transport = true), transportability based IOPW used. Generalizability analysis weighs IPPW instead IOPW.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/articles/transportIP.html","id":"specification-of-transportability-analysis","dir":"Articles","previous_headings":"Example > Analyses","what":"Specification of transportability analysis","title":"Inverse probability or odds weighting-based transportability analysis","text":"components put together follows. Recall : - sysBloodPressure response med1 treatment sex, percentBodyFat, stress covariates controlled original study med2 (medication) stress effect modifiers interest.","code":"result <- TransportHealth::transportIP(   # MSM formula   msmFormula = sysBloodPressure ~ med1,       # Propensity model   propensityScoreModel = med1 ~ sex + percentBodyFat + stress,       # Participation model   participationModel = participation ~ stress + med2,       # Type of MSM   family = gaussian,       # Data frame   data = testData,       # Transportability or generalizability specification argument   transport = T)"},{"path":"https://coreclinicalsciences.github.io/TransportHealth/articles/transportIP.html","id":"producing-statistical-results","dir":"Articles","previous_headings":"Example > Analyses","what":"Producing statistical results","title":"Inverse probability or odds weighting-based transportability analysis","text":"show results analysis, can use base::summary function, similar one use lm function fitting linear model. prints covariate balance tables pre- post-weighting covariates treatment groups (using propensity weights ) effect modifiers (using participation weights ) original study target data, well summary output MSM model fit correct standard errors calculated using bootstrapping. effect modifiers balance table, weights used inverse odds study data 1 target data transportability analysis, inverse probability observations generalizability analysis. Note custom participation weights provided, balance tables default transportability analysis since weights observations study data provided. transportIP object produced transportIP function contains model fitting objects propensity model, participation model MSM. can use methods like coef residuals objects . implemented package useful implementing summary. Positivity conditional exchangeability two key assumptions can affect validity transportability analysis. Positivity assumption observed levels covariates effect modifiers, probability treatment group study neither 0 1, respectively. evaluate assumption treatment assignment study participation, use plot function type = \"propensityHist\" type = \"participationHist\", respectively. outputs mirrored histograms probabilities treatment group different treatment groups participating study study target data, respectively. Non-overlap ranges histograms suggest violations positivity assumption (Wizard, n.d.b).   Conditional exchangeability roughly assumption possible confounding due controlled covariates effect modifiers. assumption, IOPW estimates reliable weighted distributions covariates effect modifiers similar treatment groups, study target data. can (partially) evaluated using standardized mean differences (SMDs), shown table form summary function. plot function type = \"propensitySMD\" type = \"participationSMD\" provides graphical versions tables. general guideline SMD 0.1 indicates balance, threshold arbitrary left choice analyst (Wizard, n.d.).   Model coefficient plots showing confidence intervals effect estimates provided plot function type = \"msm\". standard errors correct ones calculated bootstrap.  Note plot outputs designed generated ggplot2, can customized .","code":"base::summary(result) #> Absolute SMDs of covariates between treatments before and after weighting: #>                       variable          smd   method #> sex                        sex 1.686088e-01 Observed #> percentBodyFat  percentBodyFat 1.723317e-01 Observed #> stress                  stress 6.216350e-02 Observed #> sex1                       sex 3.720148e-05 Weighted #> percentBodyFat1 percentBodyFat 1.157406e-03 Weighted #> stress1                 stress 3.204378e-03 Weighted #> Absolute SMDs of effect modifiers between study and target populations before and after weighting: #>         variable          smd   method #> stress    stress 0.6813098772 Observed #> med2        med2 0.4965440683 Observed #> stress1   stress 0.0001397205 Weighted #> med21       med2 0.0002326560 Weighted #> MSM results: #>  #> Call: #> stats::glm(formula = msmFormula, family = family, data = toAnalyze,  #>     weights = finalWeights) #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  116.715      0.169  690.31  < 2e-16 *** #> med11         -1.771      0.497   -3.56  0.00039 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for gaussian family taken to be 69.24548) #>  #>     Null deviance: 71451  on 999  degrees of freedom #> Residual deviance: 69107  on 998  degrees of freedom #> AIC: 6333 #>  #> Number of Fisher Scoring iterations: 2 msmResiduals <- stats::residuals(result$msm)  msmCoefficients <- stats::coef(result$msm) base::plot(result, type = \"propensityHist\") base::plot(result, type = \"participationHist\") base::plot(result, type = \"propensitySMD\") base::plot(result, type = \"participationSMD\") base::plot(result, type = \"msm\")"},{"path":[]},{"path":[]},{"path":"https://coreclinicalsciences.github.io/TransportHealth/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Core Clinical Sciences. Author. Quang Vuong. Maintainer, contributor. Richard Yan. Contributor. Rebecca Metcalfe. Contributor. Jay Park. Contributor.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Core Clinical Sciences (2024). TransportHealth: Transportability Analysis. R package version 0.2.2.","code":"@Manual{,   title = {TransportHealth: Transportability Analysis},   author = {{Core Clinical Sciences}},   year = {2024},   note = {R package version 0.2.2}, }"},{"path":"https://coreclinicalsciences.github.io/TransportHealth/index.html","id":"transporthealth","dir":"","previous_headings":"","what":"Transportability Analysis","title":"Transportability Analysis","text":"TransportHealth R package, developed Core Clinical Sciences, provides functions conduct transportability generalizability analyses. Transportability generalizability analyses types causal inference methods allow us quantitatively assess external validity evidence randomized clinical trials (RCTs) diverse research studies. assess applicable findings original studies settings original studies conducted broader population included original studies. transportability analyses, aim transport findings study sample external target population adjusting different distribution effect modifiers study target sample. Generalizability analyses similar concerns case study sample subset target population. scope current version package includes following analyses. Inverse probability (IP) weighting mergeable individual patient-level datasets (IPDs) original target studies G-computation unmergable IPDs original target studies future scope, currently developing following methods. Target Aggregate Data Adjustment (TADA) method can transport findings original IPD study aggregate (summary-level) data target study Methods can transport aggregate data original study IPD target study Methods can transport aggregate data original study aggregate-level data target study data","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Transportability Analysis","text":"just getting started TransportHealth, recommend starting tutorial vignettes. examples provided part package documentation. Future papers, published preprints peer reviewed, added , become available.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Transportability Analysis","text":"Install latest development version GitHub","code":"if (!require(\"devtools\")) {   install.packages(\"devtools\") } devtools::install_github(\"CoreClinicalSciences/TransportHealth\")"},{"path":"https://coreclinicalsciences.github.io/TransportHealth/index.html","id":"citing-transporthealth","dir":"","previous_headings":"","what":"Citing TransportHealth","title":"Transportability Analysis","text":"cite TransportHealth, please see ","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://coreclinicalsciences.github.io/TransportHealth/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/is.transportGC.html","id":null,"dir":"Reference","previous_headings":"","what":"Check validity of g-computation result object — is.transportGC","title":"Check validity of g-computation result object — is.transportGC","text":"simple helper function validates whether components given transportGC object correct types.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/is.transportGC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check validity of g-computation result object — is.transportGC","text":"","code":"is.transportGC(transportGCResult)"},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/is.transportGC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check validity of g-computation result object — is.transportGC","text":"transportGCResult Result object transportGC function","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/is.transportGC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check validity of g-computation result object — is.transportGC","text":"boolean indicating whether components transportGC object correct types.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/is.transportGCPreparedModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Check validity of prepared model object for g-computation — is.transportGCPreparedModel","title":"Check validity of prepared model object for g-computation — is.transportGCPreparedModel","text":"simple helper function validates whether components given transportGCPreparedModel object correct types.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/is.transportGCPreparedModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check validity of prepared model object for g-computation — is.transportGCPreparedModel","text":"","code":"is.transportGCPreparedModel(preparedModel)"},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/is.transportGCPreparedModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check validity of prepared model object for g-computation — is.transportGCPreparedModel","text":"preparedModel Output object transportGCPreparedModel function","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/is.transportGCPreparedModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check validity of prepared model object for g-computation — is.transportGCPreparedModel","text":"boolean indicating whether components transportGCPreparedModel object correct types.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/is.transportIP.html","id":null,"dir":"Reference","previous_headings":"","what":"Check validity of IOPW result object — is.transportIP","title":"Check validity of IOPW result object — is.transportIP","text":"simple helper function validates whether components given transportIP object correct types.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/is.transportIP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check validity of IOPW result object — is.transportIP","text":"","code":"is.transportIP(transportIPResult)"},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/is.transportIP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check validity of IOPW result object — is.transportIP","text":"transportIPResult Result object transportIP function","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/is.transportIP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check validity of IOPW result object — is.transportIP","text":"boolean indicating whether components transportIP object correct types.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/plot.transportGC.html","id":null,"dir":"Reference","previous_headings":"","what":"Visually represent results of transportability analysis using g-computation — plot.transportGC","title":"Visually represent results of transportability analysis using g-computation — plot.transportGC","text":"function wrapper modelsummary::modelplot plot coefficient estimates transportability analysis using g-computation. Note correct variance estimates used function.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/plot.transportGC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visually represent results of transportability analysis using g-computation — plot.transportGC","text":"","code":"# S3 method for transportGC plot(x, ...)"},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/plot.transportGC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visually represent results of transportability analysis using g-computation — plot.transportGC","text":"x Result transportGC function. ... arguments previous function pass next function","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/plot.transportGC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visually represent results of transportability analysis using g-computation — plot.transportGC","text":"ggplot object showing estimates confidence intervals MSM coefficients.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/plot.transportIP.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot graphs relevant to transportability analysis using IOPW — plot.transportIP","title":"Plot graphs relevant to transportability analysis using IOPW — plot.transportIP","text":"Plot graphs assessment covariate balance results IOPW analysis. function currently supports mirrored histograms, SMD plots model coefficient plots.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/plot.transportIP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot graphs relevant to transportability analysis using IOPW — plot.transportIP","text":"","code":"# S3 method for transportIP plot(   x,   type = \"propensityHist\",   bins = 50,   covariates = NULL,   effectModifiers = NULL,   ... )"},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/plot.transportIP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot graphs relevant to transportability analysis using IOPW — plot.transportIP","text":"x Result transportIP function type One \"propensityHist\", \"propensitySMD\", \"participationHist\", \"participationSMD\", \"msm\". Hist produces mirrored histograms estimated probability treatment treatment groups (propensity), estimated probability participation study target data (participation). SMD produces SMD plots covariates treatment groups (propensity) effect modifiers study target data (participation). msm produces plots showing confidence intervals model coefficients, correct standard errors. bins Number bins propensity score/participation probability histograms. used Hist. covariates Vector strings indicating names covariates propensity model effectModifiers Vector strings indicating names effect modifiers participation model ... arguments previous function pass next function","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/plot.transportIP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot graphs relevant to transportability analysis using IOPW — plot.transportIP","text":"ggplot object contains desired plot.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/summary.transportGC.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize results of a fitted MSM object using g-computation — summary.transportGC","title":"Summarize results of a fitted MSM object using g-computation — summary.transportGC","text":"Returns summary object contains summary objects MSM outcome model, well information response treatment variables. MSM summary object, correct variance estimators calculated.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/summary.transportGC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize results of a fitted MSM object using g-computation — summary.transportGC","text":"","code":"# S3 method for transportGC summary(object, ...)  # S3 method for summary.transportGC print(x, out = stdout(), ...)"},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/summary.transportGC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize results of a fitted MSM object using g-computation — summary.transportGC","text":"object Result transportGC function ... arguments previous function pass next function x summary.transportGC object. Output stream.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/summary.transportGC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize results of a fitted MSM object using g-computation — summary.transportGC","text":"summary.transportGC function returns summary.transportGC object containing following components: msmSummary: Summary object MSM correct variance estimates. preparedModelSummary: Summary object outcome model, provided information. conclusions drawn outcome model. response: String indicating response variable name. treatment: String indicating treatment variable name. treatmentLevels: Vector strings indicating levels treatment variable","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/summary.transportIP.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize results of a fitted MSM using the IOPW approach — summary.transportIP","title":"Summarize results of a fitted MSM using the IOPW approach — summary.transportIP","text":"Returns summary object contains summary fitted MSM well pre- post-weighting standardized mean differences (SMDs).","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/summary.transportIP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize results of a fitted MSM using the IOPW approach — summary.transportIP","text":"","code":"# S3 method for transportIP summary(object, covariates = NULL, effectModifiers = NULL, ...)  # S3 method for summary.transportIP print(x, out = stdout(), ...)"},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/summary.transportIP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize results of a fitted MSM using the IOPW approach — summary.transportIP","text":"object Result transportIP function covariates Vector strings indicating names covariates propensity model effectModifiers Vector strings indicating names effect modifiers participation model ... arguments previous function pass next function x summary.transportIP object. Output stream.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/summary.transportIP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize results of a fitted MSM using the IOPW approach — summary.transportIP","text":"summary.transportIP function returns summary.transportIP object containing following components: propensitySMD: Table unweighted weighted SMDs covariates treatment groups. propensity weights used. participationSMD: Table unweighted weighted SMDs effect modifiers study data target data. participation weights used. msmSummary: Summary object model object MSM. correct variance estimators set glm, whereas set transportIP survreg coxph.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/transportGC.html","id":null,"dir":"Reference","previous_headings":"","what":"Transportability analysis using g-computation — transportGC","title":"Transportability analysis using g-computation — transportGC","text":"Estimates coefficients marginal structural model (MSM) using g-computation generalizability transportability analysis. particular, estimators unbiased coefficients superpopulation target population, respectively.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/transportGC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transportability analysis using g-computation — transportGC","text":"","code":"transportGC(   effectType = c(\"meanDiff\", \"rr\", \"or\", \"hr\"),   preparedModel,   targetData,   bootstrapNum = 500 )"},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/transportGC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transportability analysis using g-computation — transportGC","text":"effectType Type effect desired ATE: \"meanDiff\" mean difference, \"rr\" relative risk, \"\" odds ratio, \"hr\" hazard ratio. preparedModel transportGCPreparedModel object. obtained using transportGCPreparedModel function fit outcome model using study data. targetData target dataset. bootstrapNum Number bootstrap datasets simulate obtain robust variance estimators","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/transportGC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transportability analysis using g-computation — transportGC","text":"transportGC object following components: effect: Calculated ATE effectType: Type effect calculated var: Estimated variance ATE estimator, calculated using bootstrap preparedModel: transportGCPreparedModel object used estimate ATE bootstrapNum: Integer indicating number bootstrap datasets simulated calculate robust variance estimators.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/transportGC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transportability analysis using g-computation — transportGC","text":"expected workflow follows: researcher wants perform generalizability/transportability analysis collects data target population. request owner study data wish generalize/transport provide outcome model fitted using study data. owner study data runs transportGCPreparedModel function study data obtain transportGCPreparedModel object contains fitted outcome model. owner study data provides transportGCPreparedModel object researcher, perhaps .rds file. researcher uses function provided transportGCPreparedModel object perform analysis using g-computation. Since model-fitting objects R often contain data used fit model, transportGCPreparedModel function wipes data model-fitting object keeps additional information name response variable, name treatment variable levels treatment. comply government regulations regarding access integration data sources different countries. MSM-fitting functions provide correct standard errors -. Bootstrap used calculate robust variance estimates MSM coefficient estimators. Note standard errors valid conditional observed study data possible resample study data access restricted.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/transportGCPreparedModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare an outcome model object for transportGC — transportGCPreparedModel","title":"Prepare an outcome model object for transportGC — transportGCPreparedModel","text":"outcome model needs fitted using study data perform transportability analysis using g-computation. However, glm functions survival typically contain data used fit model respective result objects. function provides option remove components containing data result objects comply data sharing regulations. party sole access study data may use function provide results object (possibly .rds file) others request . Note time--event outcomes, survreg used outcome model coxph latter meant produce predicted survival times. coxph option provided, warn computation time might prohibitive.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/transportGCPreparedModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare an outcome model object for transportGC — transportGCPreparedModel","text":"","code":"transportGCPreparedModel(   outcomeModel,   response = NULL,   responseLevels = NULL,   treatment,   treatmentLevels = NULL,   family = stats::gaussian,   method = c(\"logistic\", \"probit\", \"loglog\", \"cloglog\", \"cauchit\"),   studyData = NULL,   wipe = T,   formula = NULL )"},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/transportGCPreparedModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare an outcome model object for transportGC — transportGCPreparedModel","text":"outcomeModel Either formula glm, survreg, coxph, polr object representing outcome model. Please set model = T providing fitted model object. response String indicating name response variable. NULL, auto-detected outcomeModel. responseLevels ordinal responses, vector strings indicating levels response variable study data. NULL polr used, auto-detected using response studyData. treatment String indicating name treatment variable. argument required. treatmentLevels Vector strings indicating levels treatment variable study data. NULL, auto-detected using treatment studyData. family Either family function used glm, one c(\"coxph\", \"survreg\"). required outcomeModel formula. method Link function used polr, one c(\"logistic\", \"probit\", \"loglog\", \"cloglog\", \"cauchit\"). required outcomeModel formula polr used. studyData Data frame study data. wipe Logical indicating whether original study data wiped outcome model-fitting object. formula formula used fit outcomeModel, outcomeModel provided fitted model object. necessary provide using coxph, survreg polr objects formula components.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/transportGCPreparedModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare an outcome model object for transportGC — transportGCPreparedModel","text":"transportGCPreparedModel object containing following components: outcomeModel: fitted outcome model components containing data used fit model removed response: String indicating name response variable treatment: String indicating name treatment variable treatmentLevels: Vector strings indicating levels treatment variable family: family argument provided wipe: wipe argument provided formula: formula used fit outcome model","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/transportIP.html","id":null,"dir":"Reference","previous_headings":"","what":"Transportability analysis using IOPW — transportIP","title":"Transportability analysis using IOPW — transportIP","text":"Estimates coefficients marginal structural model (MSM) using IP weighting generalizability transportability analysis. particular, estimators unbiased coefficients superpopulation target population, respectively. Currently, function supports case exactly two treatment levels.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/transportIP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transportability analysis using IOPW — transportIP","text":"","code":"transportIP(   msmFormula,   propensityScoreModel = NULL,   participationModel = NULL,   propensityWeights = NULL,   participationWeights = NULL,   treatment = NULL,   participation = NULL,   response = NULL,   family = stats::gaussian,   method = c(\"logistic\", \"probit\", \"loglog\", \"cloglog\", \"cauchit\"),   data,   transport = T,   bootstrapNum = 500 )"},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/transportIP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transportability analysis using IOPW — transportIP","text":"msmFormula formula MSM fitted, usually includes outcome, treatment effect modifiers. propensityScoreModel Either formula glm object representing model treatment assignment given covariates. participationModel Either formula glm object representing model study participation given effect modifiers. formula \"data\" argument list, add participation left-hand side formula. propensityWeights Vector custom weights balancing covariates treatments. Providing override formula model provided propensityScoreModel. vector entries sample size study data. participationWeights Vector custom weights balancing effect modifiers study target populations. Providing override formula model provided participationModel. vector entries sample size study data. treatment String indicating name treatment variable. NULL, auto-detected propensityScoreModel provided; otherwise remain NULL. Note using custom weights, treatment provided summary.transportIP plot.transportIP works. participation String indicating name participation variable. NULL, auto-detected participationModel provided; otherwise remain NULL. Note using custom weights, participation provided summary.transportIP plot.transportIP works. response String indicating name response variable. NULL, auto-detected form msmFormula. family Either family function used glm, one c(\"polr\", \"coxph\", \"survreg\"). method Link function used polr, one c(\"logistic\", \"probit\", \"loglog\", \"cloglog\", \"cauchit\"). data Either single data frame containing merged study target datasets, list containing study dataset target dataset. Note participationModel glm object, datasets merged, provide merged dataset containing response, treatment, covariates controlled original study, study participation effect modifiers case. Make sure code treatment participation 0-1 TRUE-FALSE, 1 TRUE representing treatment group study data, respectively. transport boolean indicating whether generalizability analysis (false) transportability analysis (true) done. bootstrapNum Number bootstrap datasets simulate obtain robust variance estimate.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/transportIP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transportability analysis using IOPW — transportIP","text":"transportIP object containing following components: msm: Raw model fit object MSM class glm, survreg coxph, correct variance estimators appropriately replaced. class glm, extra var component containing correct variance estimates. propensityScoreModel: Model treatment assignment, NULL provided custom propensity weights used participationModel: Model study participation, NULL provided custom propensity weights used propensityWeights: Propensity weights used participationWeights: Participation weights used finalWeights: Weights used fit MSM customPropensity: Boolean indicating whether custom propensity weights used customParticipation: Boolean indicating whether custom participation weights used treatment: String indicating variable name treatment participation: String indicating variable name participation response: String indicating variable name response data: Data provided data argument. Either list containing study data target data data frame containing .","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/reference/transportIP.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transportability analysis using IOPW — transportIP","text":"function fits models treatment assignment study participation order calculate weights used fit MSM. models, formula provided, logistic regression used default. glm object provided, function extracts necessary weights object. function support weighting methods, required, provide custom weights. MSM-fitting functions provide correct standard errors -. Bootstrap used calculate robust bootstrap variance estimators parameter estimators. function replaces variance component summary.glm, coxph survreg robust variance estimators directly. seem behave well predict.glm yet, prediction primary interest generalizability transportability analysis.","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/news/index.html","id":"transporthealth-022","dir":"Changelog","previous_headings":"","what":"TransportHealth 0.2.2","title":"TransportHealth 0.2.2","text":"Minor bugfixes","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/news/index.html","id":"transporthealth-020","dir":"Changelog","previous_headings":"","what":"TransportHealth 0.2.0","title":"TransportHealth 0.2.0","text":"G-computation implemented","code":""},{"path":"https://coreclinicalsciences.github.io/TransportHealth/news/index.html","id":"transporthealth-011","dir":"Changelog","previous_headings":"","what":"TransportHealth 0.1.1","title":"TransportHealth 0.1.1","text":"First working version","code":""}]
